{"version":3,"sources":["js/redux/actions/currencyActions.js","js/redux/actions/types.js","js/components/Navbar/Navbar.js","js/redux/actions/conversionActions.js","js/components/Table/TableRow.js","js/components/Table/Table.js","js/redux/reducers/currenciesReducer.js","js/redux/reducers/index.js","js/redux/reducers/conversionReducer.js","js/redux/store.js","js/components/App.js","index.js"],"names":["rp","require","fetchCurrencies","selected","reserve","conversion","dispatch","uri","concat","join","length","method","json","then","response","currencies","id","data","current","name","symbol","rank","cmc_rank","price","quote","push","payload","_i","currency","includes","Number","parseInt","err","console","error","type","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ids","forEach","element","selectedIds","reserveIds","i","reserveDropdown","_this2","map","react_default","a","createElement","className","key","onClick","e","addCurrency","changeConversion","Component","connect","state","TableRow","remove","Table","changeSortDirection","bind","assertThisInitialized","property","newDirection","sortCurrencies","setState","defineProperty","rows","Table_TableRow","removeCurrency","title","direction","initialState","combineReducers","arguments","undefined","action","produce","draft","find","filter","sort","b","store","createStore","rootReducer","applyMiddleware","thunk","App","es","Fragment","components_Navbar_Navbar","components_Table_Table","ReactDOM","render","components_App","document","getElementById"],"mappings":"uVAMMA,EAAKC,EAAQ,KAONC,EAAkB,SAACC,EAAUC,EAASC,GAApB,OAAmC,SAAAC,GAChE,IAAIC,EAAG,uEAAAC,OAA0EL,EAASM,KAAK,MAQ/F,OANGL,EAAQM,OAAS,IAClBH,GAAO,IAAMH,EAAQK,KAAK,MAKrBT,EAFPO,GAAO,IAAMF,EAEE,CACbM,OAAQ,MACRC,KAAM,SAEPC,KACC,SAAmBC,GACjB,IAAIC,EAAa,GAEjB,IAAK,IAAIC,KAAMF,EAASG,KAAM,CAC5B,IAAIC,EAAU,CACZF,GAAIA,EACJG,KAAML,EAASG,KAAKD,GAAIG,KACxBC,OAAQN,EAASG,KAAKD,GAAII,OAC1BC,KAAMP,EAASG,KAAKD,GAAIM,SACxBC,MAAOT,EAASG,KAAKD,GAAIQ,MAAMnB,GAAYkB,OAE7CR,EAAWU,KAAKP,GAQlB,IALA,IAAIQ,EAAU,CACZvB,SAAU,GACVC,QAAS,IAGXuB,EAAA,EAAAA,EAAqBZ,EAArBL,OAAAiB,IAAiC,CAA5B,IAAIC,EAAYb,EAAJY,GACXxB,EAAS0B,SAASC,OAAOC,SAASH,EAASZ,KAC7CU,EAAQvB,SAASsB,KAAKG,GAGtBF,EAAQtB,QAAQqB,KAAKG,GAIzB,OAAOF,GAET,SAAkBM,GAChBC,QAAQC,MAAMF,KAGjBnB,KAAK,SAAAa,GACJpB,EAAS,CACP6B,KC9D0B,mBD+D1BT,QAASA,QE5DT1B,EAAKC,EAAQ,KAEbmC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IACNrC,EAAG,sEAAuE,CACxEW,OAAQ,MACRC,MAAM,IAEPC,KACC,SAAmBC,GACjB,IAAI+B,EAAM,GAIV,OAHA/B,EAASG,KAAK6B,QAAQ,SAAAC,GACpBF,EAAIpB,KAAKsB,EAAQ/B,MAEZ6B,GAET,SAAkBb,GAChBC,QAAQC,MAAMF,KAGjBnB,KACC,SAAmBgC,GAEjB,IADA,IAAIG,EAAc,GAAIC,EAAa,GAC1BC,EAAI,EAAGA,EAAIL,EAAInC,OAAQwC,IAC1BA,EAAI,EACNF,EAAYvB,KAAKoB,EAAIK,IAGrBD,EAAWxB,KAAKoB,EAAIK,IAGxBb,EAAMnC,gBAAgB8C,EAAaC,EAAY,SA7BlCX,wEAkCV,IACHa,EADGC,EAAAX,KAUP,OARIA,KAAKJ,MAAMjC,UACb+C,EAAkBV,KAAKJ,MAAMjC,QAAQiD,IAAI,SAACnC,GAAD,OACvCoC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcC,IAAKxC,EAAQF,GAAI2C,QAAS,SAACC,GAAD,OAAOR,EAAKf,MAAMwB,YAAY3C,EAAQF,GAAI4C,KAC5F1C,EAAQC,KADX,KACmBD,EAAQE,OAD3B,QAOFkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,sBAIJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,gBAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZN,IAILG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,kBAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVE,QAAS,SAACC,GAAD,OAAOR,EAAKf,MAAMyB,iBACzBV,EAAKf,MAAMlC,SACXiD,EAAKf,MAAMjC,QACX,MACAwD,KANJ,OAWAN,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVE,QAAS,SAACC,GAAD,OAAOR,EAAKf,MAAMyB,iBACzBV,EAAKf,MAAMlC,SACXiD,EAAKf,MAAMjC,QACX,MACAwD,KANJ,OAWAN,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVE,QAAS,SAACC,GAAD,OAAOR,EAAKf,MAAMyB,iBACzBV,EAAKf,MAAMlC,SACXiD,EAAKf,MAAMjC,QACX,MACAwD,KANJ,mBA/FKG,aAyHNC,cALS,SAACC,GAAD,MAAY,CAClC9D,SAAU8D,EAAMlD,WAAWZ,SAC3BC,QAAS6D,EAAMlD,WAAWX,UAGY,CAACF,kBAAiB2D,YF1D/B,SAAC7C,GAAD,OAAQ,SAACV,GAClCA,EAAS,CACP6B,KCrEwB,eDsExBT,QAASV,MEuD0D8C,iBC5HvC,SAAC3D,EAAUC,EAASC,GAApB,OAAmC,SAAAC,GACjE,IAAI0C,EAAc,GAAIC,EAAa,GAUnC,OARA9C,EAAS2C,QAAQ,SAAAC,GACfC,EAAYvB,KAAKK,OAAOC,SAASgB,EAAQ/B,OAG3CZ,EAAQ0C,QAAQ,SAAAC,GACdE,EAAWxB,KAAKK,OAAOC,SAASgB,EAAQ/B,OAGnCV,EACLJ,EAAgB8C,EAAaC,EAAY5C,IACzCQ,KACA,WACEP,EAAS,CACP6B,KFZyB,oBEazBT,QAASrB,KAGb,SAAkB2B,GAChBC,QAAQC,MAAMF,QDuGLgC,CAA2E5B,oBE/G3E8B,EAdE,SAAC7B,GAAD,OACfiB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKnB,EAAMhB,MACXiC,EAAAC,EAAAC,cAAA,UAAKnB,EAAMjB,QACXkC,EAAAC,EAAAC,cAAA,UAAKnB,EAAMlB,MACXmC,EAAAC,EAAAC,cAAA,UAAKnB,EAAMd,OACX+B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAAS,SAACC,GAAD,OAAOvB,EAAM8B,OAAO9B,EAAMrB,GAAI4C,KAAlE,aCFAQ,cACJ,SAAAA,EAAY/B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACjB9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KACD4B,MAAQ,CACX5C,KAAM,OACNE,MAAO,OAETe,EAAK+B,oBAAsB/B,EAAK+B,oBAAoBC,KAAzB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KANVA,mFASCkC,GAClB,IAAIC,EAAyC,QAAzBhC,KAAKwB,MAAMO,GAAuB,OAAS,MAE/D/B,KAAKJ,MAAMqC,eAAeF,EAAUC,GAEpChC,KAAKkC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACGiC,EAAWC,qCAIP,IACHI,EADGzB,EAAAX,KAiBP,OAdIA,KAAKJ,MAAMlC,WACb0E,EAAOpC,KAAKJ,MAAMlC,SAASkD,IAAI,SAACnC,GAAD,OAC7BoC,EAAAC,EAAAC,cAACsB,EAAD,CACEpB,IAAKxC,EAAQF,GACbA,GAAIE,EAAQF,GACZK,KAAMH,EAAQG,KACdD,OAAQF,EAAQE,OAChBD,KAAMD,EAAQC,KACdI,MAAOL,EAAQK,MACf4C,OAAQf,EAAKf,MAAM0C,oBAMvBzB,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8CAEfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACEC,UAAU,2BACVuB,MAAM,eACNrB,QAAS,SAACC,GAAOR,EAAKiB,oBAAoB,OAAQT,KAHpD,YAIAN,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,MACEC,UAAU,2BACVuB,MAAM,gBACNrB,QAAS,SAACC,GAAOR,EAAKiB,oBAAoB,QAAST,KAHrD,aAGsEnB,KAAKJ,MAAMhC,WAHjF,KAIAiD,EAAAC,EAAAC,cAAA,+BAIJF,EAAAC,EAAAC,cAAA,aACGqB,aA3DKd,aA0ELC,cALS,SAACC,GAAD,MAAY,CAClC9D,SAAU8D,EAAMlD,WAAWZ,SAC3BE,WAAY4D,EAAM5D,aAGoB,CAAC0E,eLLX,SAAC/D,GAAD,OAAQ,SAACV,GACrCA,EAAS,CACP6B,KC3E2B,kBD4E3BT,QAASV,MKE4C0D,eLE3B,SAACF,EAAUS,GAAX,OAAyB,SAAC3E,GACtDA,EAAS,CACP6B,KCjF2B,kBDkF3BT,QAAS,CACP8C,SAAUA,EACVS,UAAWA,QKPFjB,CAA2DI,6BCzEpEc,EAAe,GCJNC,cAAgB,CAC7BpE,WDKF,WAAe,IAACkD,EAADmB,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAASF,EAAcI,EAAvBF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EAAA,OACbE,YAAQtB,EAAO,SAAAuB,GACb,OAAQF,EAAOnD,MACb,ILZ0B,mBKaxB,MAAO,CACLhC,SAAUmF,EAAO5D,QAAQvB,SACzBC,QAASkF,EAAO5D,QAAQtB,SAE5B,ILhBsB,eKiBpBoF,EAAMrF,SAASsB,KAAKwC,EAAM7D,QAAQqF,KAAK,SAAAvE,GAAO,OAAIA,EAAQF,KAAOsE,EAAO5D,WACxE8D,EAAMpF,QAAU6D,EAAM7D,QAAQsF,OAAO,SAAAxE,GAAO,OAAIA,EAAQF,KAAOsE,EAAO5D,UACtE,MACF,ILnByB,kBKoBnBuC,EAAM9D,SAASO,OAAS,IAC1B8E,EAAMpF,QAAQqB,KAAKwC,EAAM9D,SAASsF,KAAK,SAAAvE,GAAO,OAAIA,EAAQF,KAAOsE,EAAO5D,WACxE8D,EAAMrF,SAAW8D,EAAM9D,SAASuF,OAAO,SAAAxE,GAAO,OAAIA,EAAQF,KAAOsE,EAAO5D,WAE1E,MACF,ILxByB,kBKyBU,QAA7B4D,EAAO5D,QAAQuD,UACjBO,EAAMrF,SAASwF,KAAK,SAACpC,EAAGqC,GAAJ,OAAUrC,EAAE+B,EAAO5D,QAAQ8C,UAAYoB,EAAEN,EAAO5D,QAAQ8C,YAG5EgB,EAAMrF,SAASwF,KAAK,SAACpC,EAAGqC,GAAJ,OAAUA,EAAEN,EAAO5D,QAAQ8C,UAAYjB,EAAE+B,EAAO5D,QAAQ8C,YAE9E,MACF,QACE,OAAOP,MC/Bb5D,WCFa,WAAkC,IAAjC4D,EAAiCmB,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAF5B,MAEiBE,EAAWF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EAC/C,OAAQC,EAAOnD,MACb,IPC6B,oBOA3B,OAAOmD,EAAO5D,QAChB,QACE,OAAOuC,MCHE4B,EAFDC,YAAYC,EAAaC,YAAgBC,MCaxCC,EATH,kBACV5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUN,MAAOA,GACfvC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8C,EAAD,uBCNNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.93ac926e.chunk.js","sourcesContent":["import { \r\n  FETCH_CURRENCIES,\r\n  ADD_CURRENCY,\r\n  REMOVE_CURRENCY,\r\n  SORT_CURRENCIES\r\n} from './types';\r\nconst rp = require('request-promise');\r\n\r\n//Action creator which makes an API request then dispatches the results to the store in its payload\r\n//Parameters:\r\n//  selected: array of ids of selected currencies\r\n//  reserve: array of ids of reserve currencies\r\n//  conversion: option to convert prices (string)\r\nexport const fetchCurrencies = (selected, reserve, conversion) => dispatch => {\r\n  let uri = `https://disquietude-coinmarketcap-microservice.glitch.me/api/quotes/${selected.join(',')}`;\r\n\r\n  if(reserve.length > 0) {\r\n    uri += ',' + reserve.join(',');\r\n  }\r\n\r\n  uri += '/' + conversion;\r\n\r\n  return rp(uri, {\r\n    method: 'GET',\r\n    json: 'true'\r\n  })\r\n  .then(\r\n    function fulfilled(response) {\r\n      let currencies = [];\r\n      \r\n      for (let id in response.data) {\r\n        let current = {\r\n          id: id,\r\n          name: response.data[id].name,\r\n          symbol: response.data[id].symbol,\r\n          rank: response.data[id].cmc_rank,\r\n          price: response.data[id].quote[conversion].price\r\n        }\r\n        currencies.push(current);\r\n      }\r\n\r\n      let payload = {\r\n        selected: [],\r\n        reserve: []\r\n      }\r\n\r\n      for (let currency of currencies) {\r\n        if (selected.includes(Number.parseInt(currency.id))) {\r\n          payload.selected.push(currency);\r\n        }\r\n        else {\r\n          payload.reserve.push(currency);\r\n        }\r\n      }\r\n\r\n      return payload;\r\n    },\r\n    function rejected(err) {\r\n      console.error(err);\r\n    }\r\n  )\r\n  .then(payload => {\r\n    dispatch({\r\n      type: FETCH_CURRENCIES,\r\n      payload: payload\r\n    })\r\n  });\r\n}\r\n\r\nexport const addCurrency = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_CURRENCY,\r\n    payload: id\r\n  })\r\n}\r\n\r\nexport const removeCurrency = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_CURRENCY,\r\n    payload: id\r\n  })\r\n}\r\n\r\nexport const sortCurrencies = (property, direction) => (dispatch) => {\r\n  dispatch({\r\n    type: SORT_CURRENCIES,\r\n    payload: {\r\n      property: property,\r\n      direction: direction\r\n    }\r\n  })\r\n}","//Currency Actions\r\nexport const FETCH_CURRENCIES = 'FETCH_CURRENCIES';\r\nexport const ADD_CURRENCY = 'ADD_CURRENCY';\r\nexport const REMOVE_CURRENCY = 'REMOVE_CURRENCY';\r\nexport const SORT_CURRENCIES = 'SORT_CURRENCIES';\r\n\r\n//Conversion Actions\r\nexport const CHANGE_CONVERSION = 'CHANGE_CONVERSION';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCurrencies, addCurrency } from '../../redux/actions/currencyActions';\r\nimport { changeConversion } from '../../redux/actions/conversionActions';\r\nconst rp = require('request-promise');\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    rp('https://disquietude-coinmarketcap-microservice.glitch.me/api/map/10', {\r\n      method: 'GET',\r\n      json: true\r\n    })\r\n    .then(\r\n      function fulfilled(response) {\r\n        let ids = [];\r\n        response.data.forEach(element => {\r\n          ids.push(element.id);\r\n        });\r\n        return ids;\r\n      },\r\n      function rejected(err) {\r\n        console.error(err);\r\n      }\r\n    )\r\n    .then(\r\n      function fulfilled(ids) {\r\n        let selectedIds = [], reserveIds = [];\r\n        for (let i = 0; i < ids.length; i++) {\r\n          if (i < 5) {\r\n            selectedIds.push(ids[i]);\r\n          }\r\n          else {\r\n            reserveIds.push(ids[i]);\r\n          }\r\n        }\r\n        props.fetchCurrencies(selectedIds, reserveIds, 'USD');\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let reserveDropdown;\r\n    if (this.props.reserve) {\r\n      reserveDropdown = this.props.reserve.map((current) => (\r\n        <a className='navbar-item' key={current.id} onClick={(e) => this.props.addCurrency(current.id, e)}>\r\n          {current.name} ({current.symbol})\r\n        </a>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <nav className='navbar is-link'>\r\n\r\n        <div className='navbar-brand'>\r\n          <div className='navbar-item'>\r\n            <h1 className='title is-5'>React Blockchain</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='navbar-menu'>\r\n          <div className='navbar-end'>\r\n\r\n            <div className='navbar-item has-dropdown is-hoverable'>\r\n              <a className='navbar-link'>\r\n                Add Currency\r\n              </a>\r\n\r\n              <div className='navbar-dropdown'>\r\n                {reserveDropdown}\r\n              </div>          \r\n            </div>\r\n\r\n            <div className='navbar-item has-dropdown is-hoverable'>\r\n              <a className='navbar-link'>\r\n                Convert Prices\r\n              </a>\r\n\r\n              <div className='navbar-dropdown'>\r\n                <a \r\n                  className='navbar-item' \r\n                  onClick={(e) => this.props.changeConversion(\r\n                    this.props.selected,\r\n                    this.props.reserve,\r\n                    'USD',\r\n                    e\r\n                  )}\r\n                >\r\n                  USD\r\n                </a>\r\n                <a \r\n                  className='navbar-item' \r\n                  onClick={(e) => this.props.changeConversion(\r\n                    this.props.selected,\r\n                    this.props.reserve,\r\n                    'BTC',\r\n                    e\r\n                  )}\r\n                >\r\n                  BTC\r\n                </a>\r\n                <a \r\n                  className='navbar-item' \r\n                  onClick={(e) => this.props.changeConversion(\r\n                    this.props.selected,\r\n                    this.props.reserve,\r\n                    'ETH',\r\n                    e\r\n                  )}\r\n                >\r\n                  ETH\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selected: state.currencies.selected,\r\n  reserve: state.currencies.reserve\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchCurrencies, addCurrency, changeConversion})(Navbar);","import { CHANGE_CONVERSION } from './types';\r\nimport { fetchCurrencies } from './currencyActions';\r\n\r\nexport const changeConversion = (selected, reserve, conversion) => dispatch => {\r\n  let selectedIds = [], reserveIds = [];\r\n  \r\n  selected.forEach(element => {\r\n    selectedIds.push(Number.parseInt(element.id));\r\n  });\r\n\r\n  reserve.forEach(element => {\r\n    reserveIds.push(Number.parseInt(element.id));\r\n  });\r\n\r\n  return dispatch(\r\n    fetchCurrencies(selectedIds, reserveIds, conversion)\r\n  ).then(\r\n    function fulfilled() {\r\n      dispatch({\r\n        type: CHANGE_CONVERSION,\r\n        payload: conversion\r\n      });\r\n    },\r\n    function rejected(err) {\r\n      console.error(err);\r\n    } \r\n  )\r\n}","import React from 'react';\r\n\r\nconst TableRow = (props) => (\r\n  <tr>\r\n    <th>{props.rank}</th>\r\n    <td>{props.symbol}</td>\r\n    <td>{props.name}</td>\r\n    <td>{props.price}</td>\r\n    <td>\r\n      <button className='button' onClick={(e) => props.remove(props.id, e)}>\r\n        Remove\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default TableRow;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { removeCurrency, sortCurrencies } from '../../redux/actions/currencyActions';\r\n\r\nimport TableRow from './TableRow';\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rank: 'desc',\r\n      price: 'asc'\r\n    };\r\n    this.changeSortDirection = this.changeSortDirection.bind(this);\r\n  }\r\n\r\n  changeSortDirection(property) {\r\n    let newDirection = (this.state[property] === 'asc') ? 'desc' : 'asc';\r\n\r\n    this.props.sortCurrencies(property, newDirection);\r\n\r\n    this.setState({\r\n      [property]: newDirection\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let rows;\r\n\r\n    if (this.props.selected) {\r\n      rows = this.props.selected.map((current) => (\r\n        <TableRow \r\n          key={current.id}\r\n          id={current.id}\r\n          rank={current.rank}\r\n          symbol={current.symbol}\r\n          name={current.name}\r\n          price={current.price}\r\n          remove={this.props.removeCurrency}\r\n        />\r\n      ))\r\n    }\r\n\r\n    return (\r\n      <section className='section'>\r\n        <div className='container'>\r\n          <table className='table is-striped is-hoverable is-fullwidth'>\r\n\r\n            <thead>\r\n              <tr>\r\n                <th \r\n                  className='table__header--clickable' \r\n                  title='Sort by Rank'\r\n                  onClick={(e) => {this.changeSortDirection('rank', e);}}>CMC Rank</th>\r\n                <th>Symbol</th>\r\n                <th>Name</th>\r\n                <th \r\n                  className='table__header--clickable'\r\n                  title='Sort by Price' \r\n                  onClick={(e) => {this.changeSortDirection('price', e);}}>Price (in {this.props.conversion})</th>\r\n                <th>Remove Currency</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {rows}\r\n            </tbody>\r\n\r\n          </table>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selected: state.currencies.selected,\r\n  conversion: state.conversion\r\n})\r\n\r\nexport default connect(mapStateToProps, {removeCurrency, sortCurrencies})(Table);","import produce from 'immer';\r\nimport { \r\n  FETCH_CURRENCIES,\r\n  ADD_CURRENCY,\r\n  REMOVE_CURRENCY,\r\n  SORT_CURRENCIES\r\n } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => \r\n  produce(state, draft => {\r\n    switch (action.type) {\r\n      case FETCH_CURRENCIES:\r\n        return {\r\n          selected: action.payload.selected,\r\n          reserve: action.payload.reserve\r\n        };\r\n      case ADD_CURRENCY:\r\n        draft.selected.push(state.reserve.find(current => current.id === action.payload));\r\n        draft.reserve = state.reserve.filter(current => current.id !== action.payload);\r\n        break;\r\n      case REMOVE_CURRENCY:\r\n        if (state.selected.length > 1) {\r\n          draft.reserve.push(state.selected.find(current => current.id === action.payload));\r\n          draft.selected = state.selected.filter(current => current.id !== action.payload);\r\n        }\r\n        break;\r\n      case SORT_CURRENCIES:\r\n        if (action.payload.direction === 'asc') {\r\n          draft.selected.sort((a, b) => a[action.payload.property] - b[action.payload.property]);\r\n        }\r\n        else {\r\n          draft.selected.sort((a, b) => b[action.payload.property] - a[action.payload.property]);\r\n        }\r\n        break;\r\n      default:\r\n        return state;\r\n    }\r\n});","import { combineReducers } from 'redux';\r\nimport currenciesReducer from './currenciesReducer';\r\nimport conversionReducer from './conversionReducer';\r\n\r\nexport default combineReducers({\r\n  currencies: currenciesReducer,\r\n  conversion: conversionReducer\r\n});","import { CHANGE_CONVERSION } from '../actions/types'\r\n\r\nconst initialState = 'USD';\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_CONVERSION:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Navbar from './Navbar/Navbar';\r\nimport Table from './Table/Table';\r\n\r\nimport store from '../redux/store';\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <Table />\r\n    </React.Fragment>\r\n  </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/components/App';\nimport 'bulma/css/bulma.css';\nimport './sass/styles.sass';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}